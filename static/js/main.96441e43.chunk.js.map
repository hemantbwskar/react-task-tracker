{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","class","Footer","href","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","moment","day","format","Tasks","tasks","map","index","AddTask","useState","setText","Date","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","selected","dateFormat","checked","currentTarget","App","showAddtasks","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96441e43.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nconst Button = ({ color, text, onClick}) => {\r\n  \r\n    return (\r\n        <div>\r\n            <button onClick={onClick} style ={{backgroundColor: color}}\r\n            className='btn'>\r\n                {text}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nButton.defaultProps={\r\n    color:'steelblue'\r\n}\r\n\r\nButton.propTypes={\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n\r\nconst Header = ({title,onAdd,showAdd}) => {\r\n\r\n    return (\r\n        <header class ='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd?'orange':'green'} text={showAdd ?'close':'Add'} onClick={onAdd}/>\r\n                    \r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps={\r\n    title:'Task Tracker'\r\n}\r\n\r\nHeader.propTypes={\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n// css in JS\r\nconst headingstyle={\r\n    color:'red', backgroundColor: 'black'\r\n}\r\n\r\nexport default Header\r\n","import { Link } from \"react-router-dom\"\r\n\r\nconst Footer=()=>{\r\n    return(\r\n        <footer>\r\n            <p>Copyright @copy: 2021</p>\r\n            {/* <Link to='/about'>About</Link> */}\r\n            <p>About</p>\r\n            <h4>Version 0.0.7</h4>\r\n            \r\n            <a href='mailto:hemantbwskar@gmail.com'>Contact Me</a>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import {FaTimes} from 'react-icons/fa'\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from 'moment';\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={()=>onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{color:'red', cursor:'pointer'}} onClick={()=>onDelete(task.id)}/>\r\n            </h3>\r\n            <p>{moment(task.day).format(\"LL\")}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    \r\n    return (\r\n        // setTasks([...tasks,{}])\r\n        <>\r\n        {tasks.map((task, index)=>(\r\n        <Task \r\n        key={index} \r\n        task={task} \r\n        onDelete={onDelete} \r\n        onToggle={onToggle}\r\n        />  \r\n        ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from \"react\"\r\n\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport \"react-datetime-picker/dist/DateTimePicker.css\";\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text,setText]=useState('')\r\n    const [day,setDay]=useState(new Date())\r\n    const [reminder,setReminder]=useState(false)\r\n\r\n    const onSubmit =(e)=>{\r\n        e.preventDefault()\r\n    \r\n        if(!text){\r\n            alert('Plase add a task')\r\n            return\r\n        }\r\n    \r\n        onAdd({text,day,reminder})\r\n    \r\n        setText('')\r\n        setDay(day)\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        \r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <lable>Task</lable>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <lable>Day and Time</lable>\r\n                \r\n                <DateTimePicker\r\n                            selected={day} \r\n                            value={day}\r\n                            onChange={(e) => setDay(e)} \r\n                            dateFormat=\"Pp\"\r\n                />\r\n                {/* <input type='text' placeholder='Add Day and Time' value={day} onChange={(e) => setDay(e.target.value)}/> */}\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <lable>Set Reminder</lable>\r\n                <input type='checkbox' checked={reminder}value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task' className='btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport { useState, useEffect } from \"react\"\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport Tasks from \"./components/Tasks\";\r\nimport AddTask from \"./components/AddTask\";\r\nimport About from \"./components/About\";\r\nimport ReactDateTimePicker from \"react-datepicker\";\r\n\r\nfunction App() {\r\n  const[showAddtasks,setShowAddTask]=useState(false)\r\n\r\n  const[tasks,setTasks]=useState([])\r\n\r\n  \r\n\r\n  useEffect(()=>{\r\n   const getTasks=async()=>{\r\n     const tasksFromServer=await fetchTasks()\r\n     setTasks(tasksFromServer)\r\n   }\r\n\r\n    getTasks()\r\n  },[])\r\n    \r\n// fetch data\r\n  const fetchTasks=async()=>{\r\n    const res = await fetch('https://polar-badlands-57668.herokuapp.com/tasks')\r\n    const data = await res.json()\r\n    // console.log(data)\r\n    return data\r\n  }\r\n\r\n  const fetchTask=async(id)=>{\r\n    const res = await fetch('https://polar-badlands-57668.herokuapp.com/tasks/'+id)\r\n    const data = await res.json()\r\n    // console.log(data)\r\n    return data\r\n  }\r\n  \r\n\r\n//Add task\r\nconst addTask=async(task)=>{\r\nconst res =await fetch('https://polar-badlands-57668.herokuapp.com/tasks',{\r\n  method: 'POST',\r\n  headers:{\r\n    'Content-type':'application/json'\r\n  },\r\n  body:JSON.stringify(task)\r\n})\r\n\r\nconst data=await res.json()\r\n\r\nsetTasks([...tasks, data])\r\n  // const id=Math.floor(Math.random()*10000)+1\r\n\r\n  // const newTask = {id,...task}\r\n  // setTasks([...tasks,newTask])  \r\n  // console.log(task)\r\n}\r\n\r\n\r\n//delete task\r\nconst deleteTask=async(id)=>{\r\nawait fetch('https://polar-badlands-57668.herokuapp.com/tasks/'+id,\r\n{\r\n  method: 'DELETE',\r\n})\r\n  // console.log('delete',id)\r\n  setTasks(tasks.filter((task)=>task.id !==id))\r\n}\r\n\r\n//toggle reminder\r\nconst toggleReminder =async (id)=>{\r\nconst taskToToggle=await fetchTask(id)\r\nconst updTask={...taskToToggle,reminder: !taskToToggle.reminder}\r\n\r\nconst res = await fetch('https://polar-badlands-57668.herokuapp.com/tasks/'+id,\r\n{\r\n  method: 'PUT',\r\n  headers:{\r\n    'Content-type':'application/json'\r\n  },\r\n  body:JSON.stringify(updTask)\r\n})\r\n\r\nconst data= await res.json()\r\n\r\n  // console.log(id)\r\n  setTasks(tasks.map((task)=> task.id===id \r\n  ? {...task,reminder: data.reminder} \r\n  : task))\r\n}\r\n\r\n  // const name = 'Hemant'\r\n  // const x = true\r\n  return (\r\n    <Router>\r\n    <div className='container'>\r\n     <Header onAdd={()=>setShowAddTask(!showAddtasks)}\r\n     showAdd={showAddtasks}\r\n    //  title='Task Tracker'\r\n    />\r\n     {showAddtasks && <AddTask onAdd={addTask}/>}\r\n     {tasks.length >0 ? (<Tasks tasks={tasks} onDelete=\r\n     {deleteTask} onToggle={toggleReminder}/>\r\n     ) : (\r\n       'No task to do.'\r\n       )}\r\n       {/* <Routes><Route path='/' exact render={(props)\r\n         =>(\r\n         <>\r\n         </>\r\n       )}/> */}\r\n       {/* <Route path='/about' component={About}/></Routes> */}\r\n      <Footer/>\r\n    </div>\r\n    </Router>\r\n    \r\n  );\r\n}\r\n\r\n// class App extends React.Component{\r\n//   render(){\r\n//     return <h1>Hello from a class.</h1>\r\n//   }\r\n\r\n// }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}